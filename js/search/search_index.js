var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDatabaseHealthIndicator.html",[0,0.065,1,1.586]],["body/classes/AbstractDatabaseHealthIndicator.html",[0,0.069,1,2.242,2,0.225,3,0.225,4,0.225,5,1.783,6,3.41,7,2.242,8,0.716,9,1.47,10,0.528,11,3.827,12,0.867,13,1.15,14,0.407,15,0.968,16,2.001,17,3.075,18,3.965,19,2.625,20,2.57,21,1.608,22,1.47,23,3.091,24,0.043,25,3.965,26,1.15,27,2.103,28,1.285,29,0.708,30,0.413,31,0.563,32,3.14,33,2.194,34,2.32,35,2.29,36,1.721,37,1.533,38,2.539,39,2.103,40,0.638,41,3.14,42,2.29,43,3.14,44,0.905,45,0.037,46,2.134,47,2.57,48,1.282,49,3.386,50,1.285,51,1.47,52,1.782,53,1.441,54,2.103,55,2.607,56,0.774,57,2.194,58,2.194,59,2.194,60,1.721,61,3.558,62,2.57,63,2.194,64,2.103,65,2.103,66,1.47,67,1.292,68,0.581,69,1.721,70,1.721,71,1.282,72,1.47,73,1.721,74,1.914,75,0.631,76,1.08,77,0.518,78,1.914,79,1.608,80,0.581,81,0.311,82,3.14,83,1.47,84,2.103,85,2.103,86,0.225,87,1.23,88,2.103,89,1.721,90,1.721,91,1.69,92,2.103,93,2.103,94,2.103,95,1.721,96,2.625,97,1.608,98,3.41,99,1.08,100,0.518,101,1.47,102,0.581,103,1.132,104,1.721,105,1.007,106,2.103,107,1.47,108,1.721,109,2.57,110,1.721,111,1.721,112,1.47,113,1.282,114,0.023]],["title/classes/ConnectionNotFoundError.html",[0,0.065,78,1.796]],["body/classes/ConnectionNotFoundError.html",[0,0.102,2,0.399,3,0.399,4,0.399,8,0.687,10,0.59,12,1.284,21,1.595,23,2.504,24,0.043,26,1.028,28,1.149,29,0.633,30,0.329,31,0.399,33,3.251,40,0.79,45,0.033,75,0.472,76,1.744,77,0.918,78,2.835,80,1.539,86,0.399,87,1.028,100,0.918,101,3.544,102,1.4,103,2.73,114,0.033,115,3.807,116,3.05,117,1.991,118,2.835,119,4.652,120,1.827,121,3.726,122,2.227,123,3.82,124,3.726]],["title/injectables/DNSHealthIndicator.html",[125,0.374,126,1.796]],["body/injectables/DNSHealthIndicator.html",[0,0.044,2,0.216,3,0.216,4,0.216,5,1.875,8,0.744,10,0.556,12,0.558,13,0.841,14,0.391,15,0.94,16,1.971,17,3.002,21,0.865,24,0.043,26,1.127,28,1.42,29,0.694,30,0.361,31,0.606,36,1.655,37,1.837,40,0.812,44,0.926,45,0.037,46,2.206,47,2.494,49,3.519,50,1.259,52,1.405,53,0.775,56,0.751,61,2.564,67,1.584,68,1.271,71,1.232,74,1.232,75,0.556,76,1.584,77,0.498,80,1.32,81,0.299,86,0.216,87,1.358,89,1.655,90,2.494,96,3.063,97,0.865,98,2.494,99,0.695,100,0.751,104,1.655,105,1.459,107,1.413,108,1.655,109,2.494,114,0.022,118,1.858,120,0.695,122,1.459,125,0.465,126,2.489,127,1.655,128,1.858,129,2.13,130,2.494,131,3.439,132,3.048,133,3.219,134,3.048,135,3.668,136,2.022,137,5.036,138,2.022,139,1.64,140,3.048,141,4.084,142,2.022,143,3.048,144,1.655,145,2.583,146,4.781,147,2.022,148,2.206,149,3.048,150,4.607,151,2.494,152,2.022,153,2.022,154,3.048,155,2.022,156,2.022,157,0.558,158,2.022,159,2.022,160,2.022,161,1.232,162,2.022,163,2.022,164,2.022,165,2.022,166,2.022,167,1.655,168,2.022,169,1.655,170,3.668,171,3.668,172,2.022,173,2.022,174,2.022,175,3.048,176,1.655,177,1.413,178,2.022,179,2.022,180,2.022,181,2.022,182,2.022]],["title/injectables/DatabaseHealthIndicator.html",[125,0.374,183,1.586]],["body/injectables/DatabaseHealthIndicator.html",[0,0.068,1,2.216,2,0.33,3,0.33,4,0.33,5,1.983,7,1.66,8,0.761,10,0.588,12,0.852,14,0.597,15,1.27,16,1.983,19,2.878,21,1.32,22,2.156,23,3.134,24,0.043,26,1.137,28,1.27,29,0.7,30,0.364,31,0.496,34,2.666,40,0.7,44,0.797,45,0.03,51,2.878,52,1.823,53,1.777,55,2.853,56,1.015,57,2.878,58,2.878,59,2.878,67,1.772,68,1.137,75,0.627,83,2.156,86,0.33,87,1.279,102,1.137,103,2.216,105,1.477,114,0.03,122,1.972,125,0.588,128,2.51,129,2.878,157,0.852,161,1.88,183,2.216,184,2.525,185,4.118,186,3.085,187,3.085,188,1.66,189,2.525,190,2.525,191,2.525,192,2.525,193,3.085,194,2.525]],["title/interfaces/DatabasePingCheckSettings.html",[38,1.796,81,0.435]],["body/interfaces/DatabasePingCheckSettings.html",[2,0.396,3,0.396,4,0.396,5,1.583,14,0.716,23,3.139,24,0.043,25,4.336,30,0.409,31,0.567,34,1.771,35,2.255,38,2.823,40,0.927,42,2.823,45,0.033,48,2.255,52,1.822,53,1.939,55,2.721,56,1.141,75,0.587,81,0.684,86,0.396,95,3.79,114,0.033,195,3.028,196,3.028,197,2.492,198,4.631,199,3.79,200,3.79,201,2.823]],["title/classes/HealthIndicator.html",[0,0.065,13,0.814]],["body/classes/HealthIndicator.html",[0,0.093,2,0.345,3,0.345,4,0.345,5,1.815,8,0.793,9,2.254,10,0.538,11,3.878,13,1.171,14,0.625,15,1.308,18,3.878,20,3.878,24,0.043,26,0.89,28,0.995,29,0.548,30,0.418,31,0.594,37,1.731,44,0.821,45,0.04,46,2.57,49,3.925,60,2.64,61,3.654,62,3.878,63,2.964,66,2.964,67,1.846,68,1.171,69,3.471,70,3.471,71,1.966,72,2.964,73,3.471,74,2.888,75,0.409,86,0.345,87,1.308,114,0.03,120,1.109,202,3.471,203,2.031,204,4.241,205,1.626,206,3.225,207,2.64,208,2.64,209,3.225]],["title/injectables/MongooseHealthIndicator.html",[125,0.374,210,1.796]],["body/injectables/MongooseHealthIndicator.html",[0,0.07,1,2.264,2,0.341,3,0.341,4,0.341,5,2.015,7,1.715,8,0.471,10,0.533,12,0.879,14,0.617,15,1.297,16,2.015,19,2.94,21,1.363,22,2.226,23,3.165,24,0.043,26,1.161,28,1.297,29,0.715,30,0.371,31,0.504,34,2.398,35,2.87,44,0.814,45,0.03,51,2.94,52,1.84,53,1.806,55,2.879,56,1.036,57,2.94,58,2.94,59,2.94,67,1.62,75,0.66,83,2.226,86,0.341,87,1.3,102,1.161,103,2.264,105,1.525,114,0.03,122,2.014,125,0.597,157,0.879,161,1.942,188,1.715,189,2.607,190,2.607,191,2.607,192,2.607,210,2.564,211,2.607,212,3.186,213,3.186,214,4.207,215,2.607,216,3.186]],["title/injectables/TerminusBootstrapService.html",[125,0.374,217,1.586]],["body/injectables/TerminusBootstrapService.html",[0,0.034,2,0.376,3,0.164,4,0.164,8,0.729,10,0.488,13,1.062,14,0.297,15,0.757,16,1.505,21,1.051,24,0.044,26,1.338,28,1.187,29,0.654,30,0.363,31,0.544,33,2.457,37,1.057,40,0.698,42,1.497,44,0.985,45,0.033,46,1.176,48,0.933,50,1.33,56,0.866,67,1.413,68,0.848,75,0.521,76,1.484,77,0.377,80,1.492,81,0.226,86,0.164,87,1.191,91,2.21,96,1.716,97,1.315,99,1.542,102,0.97,105,1.176,107,1.716,110,1.253,114,0.018,117,1.505,118,1.497,120,1.057,122,1.176,123,1.716,125,0.446,128,1.497,130,3.15,133,3.839,144,2.878,148,1.683,157,0.423,161,2.503,177,1.07,197,1.321,217,1.321,218,2.955,219,1.253,220,2.503,221,2.457,222,2.143,223,1.633,224,2.143,225,2.878,226,0.607,227,3.848,228,2.364,229,3.516,230,3.073,231,3.073,232,3.362,233,3.516,234,2.455,235,2.455,236,4.107,237,1.531,238,0.97,239,3.516,240,3.516,241,2.455,242,2.455,243,2.01,244,2.455,245,3.362,246,3.67,247,1.531,248,1.531,249,1.683,250,1.531,251,2.455,252,1.531,253,1.505,254,1.531,255,1.683,256,1.531,257,3.848,258,4.315,259,2.455,260,1.531,261,1.919,262,2.455,263,1.531,264,2.455,265,3.531,266,1.531,267,2.455,268,1.531,269,2.455,270,0.933,271,1.07,272,1.253,273,1.253,274,1.253,275,1.531,276,1.531,277,1.531,278,1.531,279,1.531,280,2.455,281,1.531,282,1.531,283,1.531,284,1.531,285,1.531,286,1.531,287,1.531,288,1.531,289,1.531,290,1.531,291,1.531,292,1.531,293,1.531,294,1.531,295,1.531,296,1.531,297,1.531,298,1.253,299,2.455,300,1.531,301,1.531,302,1.531,303,1.531,304,1.531,305,1.531,306,1.531,307,1.531,308,1.253,309,1.531,310,1.531,311,1.531,312,1.531,313,1.531,314,1.531,315,1.531,316,1.531,317,1.531]],["title/modules/TerminusCoreModule.html",[226,0.435,318,1.586]],["body/modules/TerminusCoreModule.html",[0,0.043,2,0.211,3,0.211,4,0.211,8,0.292,10,0.55,15,0.609,16,0.845,24,0.044,26,1.114,28,1.245,29,0.686,30,0.357,31,0.622,44,1.04,45,0.022,67,0.679,75,0.647,81,0.292,86,0.464,87,1.114,91,1.612,100,1.39,105,0.946,114,0.022,125,0.38,126,2.205,133,2.821,139,1.612,148,2.34,157,0.545,183,2.335,210,2.644,217,2.63,218,2.644,220,3.05,221,2.093,222,1.826,223,1.684,224,1.826,226,0.84,238,1.26,270,2.46,272,1.617,318,2.553,319,2.335,320,1.617,321,1.617,322,1.617,323,1.617,324,2.451,325,1.617,326,1.063,327,1.976,328,3.737,329,2.995,330,2.451,331,3.999,332,2.995,333,1.976,334,1.956,335,1.976,336,4.887,337,2.995,338,1.976,339,1.976,340,1.617,341,2.451,342,1.976,343,3.304,344,3.304,345,3.304,346,3.551,347,1.617,348,2.451,349,1.976,350,1.434,351,2.995,352,3.617,353,1.282,354,1.976,355,2.821,356,1.976,357,1.826,358,1.976,359,1.617,360,2.995,361,1.976,362,1.976,363,3.617,364,2.995,365,2.995,366,3.617,367,1.063,368,1.434,369,1.976,370,1.976,371,1.976]],["title/interfaces/TerminusEndpoint.html",[81,0.435,253,1.261]],["body/interfaces/TerminusEndpoint.html",[0,0.061,2,0.297,3,0.297,4,0.297,8,0.778,10,0.352,12,0.767,13,1.307,14,0.538,24,0.044,29,0.652,30,0.454,31,0.55,37,1.629,40,0.873,44,0.538,45,0.028,50,1.182,56,0.945,68,1.212,75,0.63,76,1.319,77,0.684,80,1.212,81,0.759,86,0.532,99,1.319,100,1.224,102,0.767,114,0.028,120,1.319,125,0.486,145,2.46,157,0.767,197,2.064,203,1.836,205,1.065,223,1.624,226,0.734,228,1.836,238,1.212,249,2.267,253,1.879,255,2.46,261,1.189,334,1.065,350,1.33,353,1.189,367,1.495,368,1.33,372,1.33,373,1.33,374,2.064,375,1.693,376,1.693,377,1.693,378,1.495,379,2.064,380,1.693,381,2.337,382,1.693,383,1.693,384,1.693,385,1.693,386,1.495,387,1.693,388,1.693]],["title/modules/TerminusModule.html",[226,0.435,357,1.796]],["body/modules/TerminusModule.html",[0,0.071,2,0.344,3,0.344,4,0.344,10,0.6,15,0.992,24,0.043,26,1.169,28,1.306,29,0.72,30,0.374,31,0.606,44,0.974,45,0.03,71,1.962,75,0.662,77,0.793,86,0.344,87,1.169,114,0.03,139,1.732,157,0.888,203,2.028,220,3.065,223,1.761,226,0.867,238,1.388,318,1.732,330,3.466,331,4.116,334,1.928,340,2.634,341,3.466,343,3.466,346,4.276,347,2.634,348,3.466,350,2.028,357,3.065,389,3.219,390,3.219,391,3.219,392,3.219,393,3.219,394,3.219,395,3.219,396,3.219,397,3.219]],["title/interfaces/TerminusModuleAsyncOptions.html",[81,0.435,334,1.13]],["body/interfaces/TerminusModuleAsyncOptions.html",[0,0.08,2,0.276,3,0.276,4,0.276,8,0.677,10,0.327,12,1.005,13,0.712,14,0.5,24,0.044,29,0.853,30,0.494,31,0.617,37,1.577,40,0.717,44,0.5,45,0.026,50,1.123,56,0.636,68,1.335,75,0.636,76,1.253,77,0.636,80,1.165,81,0.741,86,0.518,99,1.253,100,1.32,102,0.712,114,0.026,120,1.577,125,0.636,145,1.744,157,0.712,197,1.96,203,1.235,205,1.619,223,1.674,226,0.778,228,1.744,238,1.165,249,1.744,253,1.559,255,2.196,261,1.104,334,1.396,350,1.744,353,1.104,367,2.468,368,2.196,372,1.235,373,1.235,374,1.389,375,1.573,376,1.573,377,1.573,378,1.389,379,1.96,380,1.573,381,2.573,382,1.573,383,2.22,384,2.22,385,2.22,386,1.96,387,2.795,388,1.573]],["title/interfaces/TerminusModuleOptions.html",[81,0.435,238,0.814]],["body/interfaces/TerminusModuleOptions.html",[0,0.062,2,0.301,3,0.301,4,0.301,8,0.703,10,0.357,12,0.776,13,0.776,14,0.545,24,0.044,29,0.657,30,0.455,31,0.584,37,1.33,40,0.751,44,0.545,45,0.028,50,1.193,56,0.693,68,1.22,75,0.633,76,1.33,77,0.693,80,1.22,81,0.762,86,0.534,99,1.33,100,1.23,102,0.776,114,0.028,120,1.33,125,0.49,145,1.852,157,0.776,197,2.081,203,1.347,205,1.078,223,1.659,226,0.762,228,2.39,238,1.314,249,1.852,253,2.037,255,2.577,261,1.204,334,1.078,350,1.347,353,1.204,367,1.514,368,1.347,372,1.347,373,1.347,374,1.514,375,1.714,376,1.714,377,1.714,378,1.514,379,2.562,380,2.357,381,2.357,382,1.714,383,1.714,384,1.714,385,1.714,386,1.514,387,1.714,388,1.714]],["title/interfaces/TerminusOptionsFactory.html",[81,0.435,353,1.261]],["body/interfaces/TerminusOptionsFactory.html",[0,0.062,2,0.301,3,0.301,4,0.301,8,0.703,10,0.357,12,0.776,13,0.776,14,0.545,15,1.193,24,0.044,26,0.776,29,0.657,30,0.42,31,0.576,37,1.33,40,0.751,44,0.856,45,0.028,50,1.363,56,0.693,68,1.22,75,0.633,76,1.33,77,0.693,80,1.22,81,0.78,86,0.534,99,1.33,100,1.271,102,0.776,114,0.028,120,1.33,125,0.49,145,1.852,157,0.776,203,1.347,205,1.483,223,1.684,226,0.762,228,1.852,238,1.314,249,1.852,253,1.655,255,2.279,261,1.204,334,1.078,350,1.347,353,1.655,367,1.514,368,1.347,372,1.852,373,1.347,374,1.514,375,1.714,376,1.714,377,1.714,378,1.514,379,2.081,380,1.714,381,2.694,382,2.902,383,1.714,384,1.714,385,1.714,386,1.514,387,1.714,388,1.714,398,2.813]],["title/classes/TimeoutError.html",[0,0.065,79,1.261]],["body/classes/TimeoutError.html",[0,0.101,2,0.388,3,0.388,4,0.388,8,0.777,10,0.579,12,1.261,21,1.55,24,0.043,26,1,28,1.117,29,0.615,30,0.32,31,0.388,34,2.188,40,0.893,45,0.033,52,1.904,53,2.016,75,0.459,76,1.722,77,0.892,79,1.956,80,1.451,86,0.388,87,1.261,111,2.965,112,2.531,114,0.033,117,1.956,118,2.786,120,1.808,122,2.188,123,3.928,148,2.188,201,2.786,399,3.74,400,2.965,401,4.57,402,4.57,403,3.622,404,3.622]],["title/classes/TimeoutError-1.html",[0,0.054,79,1.059,194,2.026]],["body/classes/TimeoutError-1.html",[0,0.1,2,0.384,3,0.384,4,0.384,10,0.455,12,1.254,24,0.043,44,0.88,45,0.033,50,1.78,52,1.929,53,1.742,56,1.119,79,2.133,80,1.376,86,0.486,87,1.254,91,1.932,97,1.536,112,2.508,114,0.033,117,1.536,148,2.175,188,1.932,201,3.295,205,1.376,326,1.932,405,2.508,406,2.508,407,3.719,408,2.937,409,3.719,410,2.508,411,3.719,412,2.937,413,2.937,414,2.937,415,2.937,416,2.937,417,2.937,418,2.937,419,2.937,420,2.508,421,2.937]],["title/contributing.html",[117,1.059,422,1.73,423,2.026]],["body/contributing.html",[2,0.146,3,0.239,4,0.304,10,0.283,15,0.42,24,0.035,29,0.231,30,0.197,31,0.304,40,0.231,45,0.016,50,0.42,66,2.293,68,1.226,72,0.952,75,0.173,97,1.665,99,1.673,100,0.335,101,1.56,113,1.729,114,0.016,117,0.955,128,1.729,129,0.952,131,3.399,139,2.094,151,2.322,167,1.114,169,1.114,176,1.827,177,0.952,199,1.827,200,1.114,222,0.83,224,0.83,225,1.114,232,1.827,243,1.827,245,1.827,261,0.955,274,1.114,298,1.827,308,1.114,319,1.201,326,1.527,345,1.114,374,1.766,386,1.201,410,0.952,420,1.56,422,0.952,423,2.322,424,1.362,425,3.621,426,2.322,427,2.837,428,3.621,429,1.362,430,2.232,431,1.114,432,3.891,433,3.74,434,4.863,435,2.232,436,4.569,437,2.837,438,5.216,439,4.569,440,4.778,441,2.837,442,3.621,443,5.216,444,2.837,445,2.685,446,1.362,447,3.184,448,1.827,449,1.362,450,1.56,451,2.837,452,4.681,453,1.362,454,1.362,455,2.232,456,1.362,457,3.281,458,3.281,459,2.837,460,2.232,461,2.232,462,2.232,463,1.114,464,1.362,465,1.362,466,1.362,467,1.362,468,2.232,469,1.362,470,1.362,471,1.362,472,1.362,473,1.114,474,2.232,475,3.621,476,1.362,477,1.362,478,1.362,479,1.362,480,1.362,481,1.362,482,1.362,483,1.362,484,1.362,485,4.44,486,3.621,487,4.681,488,4.681,489,2.837,490,2.837,491,2.837,492,2.837,493,1.114,494,2.232,495,1.362,496,5.447,497,1.362,498,1.362,499,3.281,500,2.232,501,1.362,502,2.232,503,1.362,504,2.232,505,2.232,506,1.362,507,2.232,508,1.827,509,1.362,510,1.362,511,1.362,512,1.362,513,3.281,514,2.232,515,1.362,516,1.362,517,1.362,518,2.322,519,1.362,520,1.362,521,1.362,522,3.281,523,3.281,524,1.362,525,1.362,526,2.232,527,2.232,528,2.232,529,1.362,530,1.362,531,1.362,532,1.362,533,1.362,534,2.232,535,2.232,536,2.232,537,1.362,538,3.281,539,1.362,540,1.362,541,1.362,542,1.362,543,3.281,544,1.362,545,1.362,546,1.362,547,1.362,548,2.837,549,1.362,550,1.362,551,1.362,552,4.863,553,4.778,554,2.232,555,1.362,556,3.891,557,1.362,558,2.837,559,1.362,560,3.74,561,2.232,562,1.362,563,2.232,564,1.362,565,1.362,566,2.293,567,2.837,568,2.232,569,1.362,570,1.362,571,2.232,572,2.232,573,1.362,574,2.232,575,2.232,576,1.362,577,1.362,578,3.621,579,2.232,580,2.232,581,1.362,582,1.362,583,3.281,584,1.362,585,1.362,586,2.232,587,1.362,588,2.232,589,1.362,590,1.114,591,2.232,592,1.362,593,3.281,594,1.362,595,2.837,596,1.362,597,2.837,598,1.362,599,1.362,600,2.232,601,1.362,602,1.362,603,2.837,604,1.362,605,2.232,606,1.362,607,1.362,608,2.322,609,1.362,610,1.362,611,1.362,612,2.232,613,1.362,614,1.362,615,1.362,616,2.232,617,1.362,618,1.362,619,1.827,620,2.232,621,1.362,622,1.362,623,1.114,624,1.362,625,1.362,626,1.362,627,1.362,628,3.281,629,1.362,630,1.362,631,1.362,632,1.362,633,1.362,634,1.362,635,3.621,636,3.281,637,3.281,638,1.362,639,3.281,640,3.281,641,1.362,642,1.362,643,1.114,644,1.362,645,1.362,646,1.362,647,2.232,648,1.362,649,1.362,650,1.114,651,1.362,652,1.362,653,1.362,654,1.362,655,1.362,656,3.621,657,1.362,658,1.362,659,1.362,660,1.362,661,1.827,662,2.232,663,1.362,664,1.362,665,1.362,666,1.114,667,2.232,668,1.362,669,1.362,670,1.362,671,1.362,672,1.362,673,1.114,674,1.362,675,1.362,676,1.362,677,1.362,678,1.362,679,1.362,680,1.362,681,2.232,682,1.362,683,1.362,684,1.362,685,1.362,686,1.362,687,2.232,688,2.232,689,2.232,690,1.362,691,1.362,692,1.362,693,1.362,694,1.362,695,1.362,696,1.362,697,2.837,698,1.362,699,1.362,700,1.362,701,1.362,702,1.362,703,3.281,704,3.621,705,1.114,706,1.362,707,1.362,708,1.362,709,1.362,710,1.362,711,1.362,712,1.362,713,1.362,714,1.362,715,1.362,716,1.362,717,1.362,718,1.362,719,1.362,720,1.362]],["title/coverage.html",[721,3.268]],["body/coverage.html",[0,0.115,1,1.758,4,0.35,5,2.305,6,2.673,7,1.758,8,0.482,9,2.988,13,0.901,24,0.043,30,0.288,38,1.991,40,0.555,45,0.031,55,1.758,78,1.991,79,1.83,81,0.775,97,1.398,114,0.031,115,2.673,116,2.673,125,0.641,126,1.991,127,2.673,183,1.758,184,2.673,188,1.758,195,2.673,196,2.673,202,2.673,210,1.991,211,2.673,217,1.758,218,2.606,219,2.673,226,0.747,238,0.901,253,1.398,270,1.991,271,2.282,334,1.252,353,1.398,355,2.282,372,2.422,373,2.422,399,2.673,400,2.673,405,2.988,406,2.988,566,2.282,619,4.761,721,2.673,722,3.266,723,3.266,724,5.058,725,4.276,726,4.767,727,4.767,728,4.276,729,3.266,730,3.266,731,3.266,732,2.673,733,3.534,734,5.25,735,3.499,736,3.266,737,3.266]],["title/dependencies.html",[319,1.903,738,2.476]],["body/dependencies.html",[24,0.043,34,2.054,35,2.615,45,0.036,77,1.057,114,0.036,157,1.184,215,3.511,273,3.511,319,2.309,650,3.511,739,4.29,740,5.067,741,4.29,742,5.067,743,4.29,744,4.29,745,4.29,746,4.29,747,4.29,748,4.29,749,4.29]],["title/index.html",[14,0.479,117,1.059,422,1.73]],["body/index.html",[0,0.069,2,0.333,3,0.333,7,2.231,8,0.764,10,0.395,13,0.86,16,1.333,24,0.043,31,0.333,40,0.791,45,0.03,52,1.426,67,1.072,75,0.526,77,0.768,86,0.333,91,1.677,100,0.768,102,0.86,103,1.677,113,2.526,114,0.03,125,0.526,131,2.178,139,2.507,145,1.492,183,2.507,207,3.392,208,3.392,223,1.278,226,0.733,238,0.86,246,2.55,255,1.492,265,2.55,328,2.55,344,3.392,368,1.492,426,2.55,431,2.55,433,2.55,445,2.55,447,2.55,448,2.55,450,2.897,463,2.55,473,2.55,493,2.55,508,2.55,518,2.55,566,2.178,590,2.55,608,3.392,623,2.55,661,2.55,666,2.55,673,2.55,705,3.812,750,3.116,751,3.116,752,3.116,753,3.116,754,3.116,755,3.116,756,3.116,757,3.116,758,3.116,759,4.145,760,4.145,761,3.116,762,3.116,763,4.145,764,3.116,765,3.116,766,3.116,767,3.116,768,3.116,769,3.116,770,3.116,771,3.116,772,3.116,773,3.116,774,3.116,775,3.116,776,3.116,777,3.116,778,4.145,779,3.116,780,3.116,781,3.116,782,3.116,783,3.116,784,3.116,785,3.116,786,3.116,787,3.116,788,3.116,789,3.116,790,3.116,791,3.116,792,3.116,793,3.116,794,3.116]],["title/modules.html",[226,0.59]],["body/modules.html",[24,0.038,45,0.038,113,2.767,114,0.038,226,0.67,318,2.443,357,2.767,450,3.172,795,4.539,796,4.539,797,5.238,798,4.539]],["title/overview.html",[799,3.268]],["body/overview.html",[0,0.094,24,0.039,45,0.036,81,0.634,86,0.459,100,1.057,114,0.036,125,0.544,217,2.903,220,2.615,226,0.748,318,2.999,319,2.309,320,3.511,321,3.511,322,3.511,323,3.511,324,4.147,325,3.511,326,2.309,799,3.511,800,4.29,801,4.29,802,5.067]],["title/miscellaneous/typealiases.html",[803,1.509,804,3.537]],["body/miscellaneous/typealiases.html",[8,0.782,14,0.796,24,0.035,30,0.436,40,0.698,45,0.038,46,1.967,63,2.872,67,1.699,68,1.134,74,3.228,80,1.134,99,1.413,102,1.134,114,0.035,205,2.031,223,1.267,226,0.729,228,1.967,249,2.536,261,1.758,372,1.967,373,2.365,378,2.211,379,2.85,803,2.504,805,4.109,806,4.939,807,5.296,808,3.363,809,4.109]],["title/miscellaneous/variables.html",[733,2.472,803,1.509]],["body/miscellaneous/variables.html",[14,0.647,24,0.043,30,0.426,31,0.358,37,1.755,42,3.11,44,0.841,45,0.031,46,2.079,48,3.11,50,1.702,52,1.819,53,1.282,56,0.824,79,1.431,97,1.431,100,0.824,114,0.031,125,0.611,148,2.079,188,2.595,201,3.11,205,1.282,218,2.038,221,2.336,222,2.038,223,1.339,224,2.038,226,0.494,238,0.923,270,2.939,271,3.566,326,1.799,355,3.369,359,2.736,405,2.336,406,3.034,407,2.736,408,2.736,409,2.736,410,3.034,411,3.553,412,2.736,413,2.736,414,2.736,415,2.736,416,2.736,417,2.736,418,2.736,419,2.736,420,2.336,421,2.736,560,2.736,643,2.736,732,3.553,733,2.336,735,2.736,803,2.038,808,2.736,810,3.343,811,4.341,812,3.343,813,4.341,814,3.343,815,3.343]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":168,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["0.2.9",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":194,"title":{"classes/TimeoutError-1.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["1/1",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":619,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["1000",{"_index":95,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["1000m",{"_index":43,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["2",{"_index":800,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":767,"title":{},"body":{"index.html":{}}}],["300m",{"_index":765,"title":{},"body":{"index.html":{}}}],["39;https://google.com&#39",{"_index":153,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["3rd",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["4",{"_index":801,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":802,"title":{},"body":{"overview.html":{}}}],["5.2.2",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":154,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["90",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["abstract",{"_index":11,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["abstract/abstract",{"_index":189,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["abstract/health",{"_index":159,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["abstractdatabasehealthind",{"_index":1,"title":{"classes/AbstractDatabaseHealthIndicator.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"coverage.html":{}}}],["accept",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":775,"title":{},"body":{"index.html":{}}}],["ad",{"_index":685,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["addit",{"_index":72,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"contributing.html":{}}}],["adher",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["agreement",{"_index":706,"title":{},"body":{"contributing.html":{}}}],["alias",{"_index":805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["alreadi",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["amaz",{"_index":781,"title":{},"body":{"index.html":{}}}],["amount",{"_index":198,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{}}}],["angular",{"_index":758,"title":{},"body":{"index.html":{}}}],["answer",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["api",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":73,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["applic",{"_index":102,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["applicationreferencehost",{"_index":240,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["appropri",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["arg",{"_index":388,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["ask",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["assur",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["async",{"_index":16,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"index.html":{}}}],["asynchrn",{"_index":336,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["asynchron",{"_index":350,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["asyncprovid",{"_index":360,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["author",{"_index":786,"title":{},"body":{"index.html":{}}}],["autom",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["automat",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["avail",{"_index":113,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"contributing.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":105,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["axio",{"_index":150,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axioserror",{"_index":141,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrequestconfig",{"_index":146,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrespons",{"_index":158,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["b",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["back",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["backer",{"_index":782,"title":{},"body":{"index.html":{}}}],["be",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["befor",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["begin",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":696,"title":{},"body":{"contributing.html":{}}}],["best",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["beta.5bugfix(@nestjs/cor",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":428,"title":{},"body":{"contributing.html":{}}}],["between",{"_index":419,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":62,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["bootstrap",{"_index":220,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"overview.html":{}}}],["bootstrap.servic",{"_index":354,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["bootstrap.service.t",{"_index":219,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{}}}],["bootstrap.service.ts:102",{"_index":254,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:130",{"_index":256,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:144",{"_index":247,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:158",{"_index":266,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:26",{"_index":268,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:30",{"_index":241,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:50",{"_index":250,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:81",{"_index":260,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:93",{"_index":263,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrapterminu",{"_index":229,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["branch",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["break",{"_index":697,"title":{},"body":{"contributing.html":{}}}],["broccoli",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["brows",{"_index":797,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":795,"title":{},"body":{"modules.html":{}}}],["browserstack",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["brunner",{"_index":790,"title":{},"body":{"index.html":{}}}],["bug",{"_index":439,"title":{},"body":{"contributing.html":{}}}],["bugfix",{"_index":674,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":661,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["call",{"_index":267,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["capit",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["case",{"_index":176,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["catch",{"_index":108,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["caus",{"_index":123,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["chanc",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["channel",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["charact",{"_index":620,"title":{},"body":{"contributing.html":{}}}],["chat",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["check",{"_index":40,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["checkout",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["ci",{"_index":667,"title":{},"body":{"contributing.html":{}}}],["circl",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["cla",{"_index":704,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"classes/HealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cleartimeout(id",{"_index":415,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["click",{"_index":712,"title":{},"body":{"contributing.html":{}}}],["close",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["cluster_terminuscoremodul",{"_index":322,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["cluster_terminuscoremodule_provid",{"_index":323,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["code",{"_index":434,"title":{},"body":{"contributing.html":{}}}],["colon",{"_index":683,"title":{},"body":{"contributing.html":{}}}],["command",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":443,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":204,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["concat(error",{"_index":296,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["conduct",{"_index":435,"title":{},"body":{"contributing.html":{}}}],["conduct][coc",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["configur",{"_index":225,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["confirm",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["connect",{"_index":23,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["connection.query('select",{"_index":193,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["connection.startsess",{"_index":216,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{}}}],["connectionnotfounderror",{"_index":78,"title":{"classes/ConnectionNotFoundError.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["consid",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["consist",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":91,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError-1.html":{},"index.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["constructor(@opt",{"_index":190,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["constructor(caus",{"_index":119,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["constructor(connect",{"_index":22,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["constructor(httpservic",{"_index":136,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(opt",{"_index":237,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["constructor(priv",{"_index":160,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(protect",{"_index":88,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["constructor(timeout",{"_index":402,"title":{},"body":{"classes/TimeoutError.html":{}}}],["contain",{"_index":128,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["context",{"_index":103,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"index.html":{}}}],["contrast",{"_index":695,"title":{},"body":{"contributing.html":{}}}],["contribut",{"_index":423,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributor",{"_index":430,"title":{},"body":{"contributing.html":{}}}],["convent",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["coordin",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["core.modul",{"_index":394,"title":{},"body":{"modules/TerminusModule.html":{}}}],["core.module.t",{"_index":327,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:106",{"_index":335,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:35",{"_index":342,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:60",{"_index":349,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:86",{"_index":339,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["corpor",{"_index":714,"title":{},"body":{"contributing.html":{}}}],["correct",{"_index":345,"title":{},"body":{"modules/TerminusCoreModule.html":{},"contributing.html":{}}}],["correctli",{"_index":774,"title":{},"body":{"index.html":{}}}],["correspond",{"_index":47,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["coverag",{"_index":721,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craft",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":410,"title":{},"body":{"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["createasyncoptionsprovid",{"_index":332,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncoptionsprovider(opt",{"_index":333,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncprovid",{"_index":337,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncproviders(opt",{"_index":338,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createterminu",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createterminusopt",{"_index":382,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["creation",{"_index":384,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["current",{"_index":299,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["d",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["databas",{"_index":7,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"coverage.html":{},"index.html":{}}}],["databasehealthind",{"_index":183,"title":{"injectables/DatabaseHealthIndicator.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"index.html":{}}}],["databasepingcheckset",{"_index":38,"title":{"interfaces/DatabasePingCheckSettings.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["databs",{"_index":84,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["db",{"_index":763,"title":{},"body":{"index.html":{}}}],["db.pingcheck('databas",{"_index":766,"title":{},"body":{"index.html":{}}}],["declar",{"_index":321,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["default",{"_index":42,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["delet",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["depend",{"_index":319,"title":{"dependencies.html":{}},"body":{"modules/TerminusCoreModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["descript",{"_index":10,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["detail",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["develop",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["developer.md",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["directli",{"_index":512,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["dn",{"_index":132,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthind",{"_index":126,"title":{"injectables/DNSHealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{}}}],["dnshealthindicator.pingcheck(&#39;google&#39",{"_index":152,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthindicator.pingcheck('googl",{"_index":179,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["doc",{"_index":673,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["docs(changelog",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["document",{"_index":566,"title":{},"body":{"contributing.html":{},"coverage.html":{},"index.html":{}}}],["don't",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["dot",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":209,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["duplic",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["dynamicmodul",{"_index":346,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["each",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["easi",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["easier",{"_index":643,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["ecosystem",{"_index":395,"title":{},"body":{"modules/TerminusModule.html":{}}}],["edit",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["effici",{"_index":753,"title":{},"body":{"index.html":{}}}],["effort",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["endpoint",{"_index":255,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{}}}],["endpoint.healthind",{"_index":295,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["enough",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["ensur",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["err",{"_index":109,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["error",{"_index":80,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/typealiases.html":{}}}],["error.isaxioserror",{"_index":165,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.messag",{"_index":175,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.respons",{"_index":172,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.response.statu",{"_index":173,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.response.statustext",{"_index":174,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.stack",{"_index":289,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["error.t",{"_index":400,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["error.ts:7",{"_index":403,"title":{},"body":{"classes/TimeoutError.html":{}}}],["errors.length",{"_index":301,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["errors.push(error.caus",{"_index":282,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["etc",{"_index":684,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":427,"title":{},"body":{"contributing.html":{}}}],["everyth",{"_index":773,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":151,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["exce",{"_index":401,"title":{},"body":{"classes/TimeoutError.html":{}}}],["exceed",{"_index":112,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["execut",{"_index":56,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["executehealthind",{"_index":230,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["executehealthindicators(healthind",{"_index":248,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["exist",{"_index":386,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["explan",{"_index":702,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":86,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":312,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["extend",{"_index":12,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["extern",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["f",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["f$r",{"_index":383,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["factori",{"_index":381,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["fail",{"_index":177,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["fals",{"_index":90,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["fastifi",{"_index":314,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["fax",{"_index":718,"title":{},"body":{"contributing.html":{}}}],["featur",{"_index":440,"title":{},"body":{"contributing.html":{}}}],["ff",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{}}}],["fill",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["find",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["finish",{"_index":408,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["fix",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":433,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["footer",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["forc",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["fork",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["form][corpor",{"_index":720,"title":{},"body":{"contributing.html":{}}}],["form][individu",{"_index":713,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["formatt",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["forroot",{"_index":340,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forroot(opt",{"_index":341,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forrootasync",{"_index":347,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forrootasync(opt",{"_index":348,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forth",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":101,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"contributing.html":{}}}],["found.error.t",{"_index":116,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["found.error.ts:7",{"_index":121,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["framework",{"_index":752,"title":{},"body":{"index.html":{}}}],["full",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":205,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gener",{"_index":66,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"contributing.html":{}}}],["generatehttperror",{"_index":134,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["generatehttperror(key",{"_index":140,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["get",{"_index":117,"title":{"contributing.html":{},"index.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{}}}],["gethealthcheckexecutor",{"_index":231,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["gethealthcheckexecutor(endpoint",{"_index":252,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["gethealthchecksmap",{"_index":233,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["getstatu",{"_index":20,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["getstatus(key",{"_index":60,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["getterminusopt",{"_index":762,"title":{},"body":{"index.html":{}}}],["getterminusoptions(db",{"_index":771,"title":{},"body":{"index.html":{}}}],["gist",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["git",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":452,"title":{},"body":{"contributing.html":{}}}],["gitter",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["given",{"_index":148,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":351,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["go",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["godaddy/terminu",{"_index":77,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"dependencies.html":{},"index.html":{}}}],["google'",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["graph",{"_index":798,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":779,"title":{},"body":{"index.html":{}}}],["guid",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["guidelin",{"_index":432,"title":{},"body":{"contributing.html":{}}}],["gulp",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["handl",{"_index":329,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["hash",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["have",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["header",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["health",{"_index":8,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["healthcheck",{"_index":265,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["healthcheckerror",{"_index":76,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["healthcheckerror('healthcheck",{"_index":302,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckerror).caus",{"_index":285,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckmap",{"_index":258,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthchecks[endpoint.url",{"_index":304,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healtherror",{"_index":286,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthi",{"_index":70,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["healthind",{"_index":13,"title":{"classes/HealthIndicator.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{}}}],["healthindicator:14",{"_index":65,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["healthindicatorfunct",{"_index":249,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["healthindicatorresult",{"_index":74,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["healthmodul",{"_index":772,"title":{},"body":{"index.html":{}}}],["hear",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["heavili",{"_index":756,"title":{},"body":{"index.html":{}}}],["help",{"_index":425,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":431,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["histori",{"_index":633,"title":{},"body":{"contributing.html":{}}}],["host",{"_index":244,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["http",{"_index":130,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["http://localhost:3000/health",{"_index":776,"title":{},"body":{"index.html":{}}}],["httpmodul",{"_index":352,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["https://google.com",{"_index":180,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["https://nestjs.com",{"_index":792,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":227,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["httpservic",{"_index":137,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["id",{"_index":413,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["idea",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["identifi",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["imper",{"_index":687,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":274,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["import",{"_index":75,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"index.html":{}}}],["importantli",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["improv",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["includ",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["inclus",{"_index":446,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":67,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.interfac",{"_index":377,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["indicator.interface.t",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["indicator.t",{"_index":9,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"coverage.html":{}}}],["indicator.ts:13",{"_index":27,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["indicator.ts:14",{"_index":206,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["indicator.ts:27",{"_index":54,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["indicator.ts:38",{"_index":39,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["indicators/abstract/abstract",{"_index":6,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"coverage.html":{}}}],["indicators/abstract/health",{"_index":202,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["indicators/databs",{"_index":195,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["indicators/dns/dns.health.t",{"_index":127,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"coverage.html":{}}}],["indicators/dns/dns.health.ts:13",{"_index":138,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:27",{"_index":156,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:41",{"_index":142,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:76",{"_index":147,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/mongoose/mongoose.health.t",{"_index":211,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"coverage.html":{}}}],["indicators/mongoose/mongoose.health.ts:23",{"_index":213,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{}}}],["indicators/mongoose/mongoose.health.ts:8",{"_index":212,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{}}}],["indicators/typeorm/typeorm.health.t",{"_index":184,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"coverage.html":{}}}],["indicators/typeorm/typeorm.health.ts:11",{"_index":186,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/typeorm/typeorm.health.ts:26",{"_index":187,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["individu",{"_index":710,"title":{},"body":{"contributing.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["inform",{"_index":518,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["inherit",{"_index":64,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["initi",{"_index":122,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["inject",{"_index":125,"title":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(terminus_lib",{"_index":276,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["inject(terminus_module_opt",{"_index":275,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["injectconnect",{"_index":214,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{}}}],["insid",{"_index":378,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["inspir",{"_index":757,"title":{},"body":{"index.html":{}}}],["instal",{"_index":759,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":33,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{}}}],["instance.serv",{"_index":313,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["instanceof",{"_index":110,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["integr",{"_index":330,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["interfac",{"_index":81,"title":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/terminu",{"_index":392,"title":{},"body":{"modules/TerminusModule.html":{}}}],["intern",{"_index":328,"title":{},"body":{"modules/TerminusCoreModule.html":{},"index.html":{}}}],["investig",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["ishealthi",{"_index":61,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["issu",{"_index":438,"title":{},"body":{"contributing.html":{}}}],["it'",{"_index":707,"title":{},"body":{"contributing.html":{}}}],["javascript",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["join",{"_index":784,"title":{},"body":{"index.html":{}}}],["json.stringify(healtherror.caus",{"_index":287,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["kamil",{"_index":787,"title":{},"body":{"index.html":{}}}],["keep",{"_index":444,"title":{},"body":{"contributing.html":{}}}],["key",{"_index":49,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["kind",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["lead",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":320,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["letter",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["lib.provid",{"_index":356,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["lib.provider.t",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/.../health",{"_index":806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../promis",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../terminu",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../terminus.constants.t",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/errors/connect",{"_index":115,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["lib/errors/timeout",{"_index":399,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["lib/health",{"_index":5,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"coverage.html":{}}}],["lib/interfaces/health",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/interfaces/terminu",{"_index":372,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["lib/terminu",{"_index":218,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/terminus.constants.t",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/terminus.module.t",{"_index":389,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/terminus.module.ts:18",{"_index":390,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/terminus.module.ts:29",{"_index":391,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/utils/promis",{"_index":405,"title":{},"body":{"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":224,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["licens",{"_index":705,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["line",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":380,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["liter",{"_index":63,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["livio",{"_index":789,"title":{},"body":{"index.html":{}}}],["local",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":261,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["logerror",{"_index":234,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logerror(messag",{"_index":259,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logger",{"_index":228,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["logger(terminusbootstrapservice.nam",{"_index":269,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["loghealthcheckregist",{"_index":235,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["loghealthcheckregister(healthcheck",{"_index":262,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["long",{"_index":57,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["longer",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["look",{"_index":632,"title":{},"body":{"contributing.html":{}}}],["love",{"_index":424,"title":{},"body":{"contributing.html":{}}}],["mail",{"_index":719,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":426,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["mandatori",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["map",{"_index":257,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["map((p",{"_index":280,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["map(healthind",{"_index":279,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["master",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":114,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":58,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["mayb",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["mean",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["merg",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["messag",{"_index":99,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":15,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["millisecond",{"_index":409,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["mind",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["miscellan",{"_index":803,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":778,"title":{},"body":{"index.html":{}}}],["modul",{"_index":226,"title":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":375,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["mongoos",{"_index":35,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"dependencies.html":{}}}],["mongooseconnect",{"_index":25,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["mongoosehealthind",{"_index":210,"title":{"injectables/MongooseHealthIndicator.html":{}},"body":{"injectables/MongooseHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{}}}],["more",{"_index":608,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["motiv",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["ms",{"_index":201,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["myśliwiec",{"_index":788,"title":{},"body":{"index.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{}}}],["necessari",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["nest",{"_index":139,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"contributing.html":{},"index.html":{}}}],["nestframework",{"_index":794,"title":{},"body":{"index.html":{}}}],["nestj",{"_index":245,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["nestjs/common",{"_index":157,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"dependencies.html":{}}}],["nestjs/common/interfac",{"_index":376,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["nestjs/cor",{"_index":273,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"dependencies.html":{}}}],["nestjs/mongoos",{"_index":215,"title":{},"body":{"injectables/MongooseHealthIndicator.html":{},"dependencies.html":{}}}],["nestjs/nest",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["nestjs/terminu",{"_index":760,"title":{},"body":{"index.html":{}}}],["nestjs/typeorm",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["nestjs:mast",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":97,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newlin",{"_index":700,"title":{},"body":{"contributing.html":{}}}],["node.j",{"_index":751,"title":{},"body":{"index.html":{}}}],["note",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["npm",{"_index":666,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["number",{"_index":53,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.assign(previ",{"_index":300,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["object.keys(healthchecks).foreach(endpoint",{"_index":290,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["ok",{"_index":777,"title":{},"body":{"index.html":{}}}],["on",{"_index":374,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["onapplicationbootstrap",{"_index":236,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["open",{"_index":445,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["option",{"_index":31,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options.connect",{"_index":92,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["options.import",{"_index":362,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.inject",{"_index":369,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.interfac",{"_index":393,"title":{},"body":{"modules/TerminusModule.html":{}}}],["options.interface.t",{"_index":373,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["options.interface.ts:48",{"_index":398,"title":{},"body":{"interfaces/TerminusOptionsFactory.html":{}}}],["options.timeout",{"_index":94,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["options.useclass",{"_index":366,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.useexist",{"_index":364,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.usefactori",{"_index":363,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["optionsfactori",{"_index":370,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["optionsfactory.createterminusopt",{"_index":371,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["order",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["out",{"_index":326,"title":{},"body":{"modules/TerminusCoreModule.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlin",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["overflow'",{"_index":466,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":799,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.catch((error",{"_index":281,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["p.then((result",{"_index":283,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["packag",{"_index":738,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["param",{"_index":87,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["paramet",{"_index":28,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"classes/TimeoutError.html":{}}}],["parti",{"_index":222,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":420,"title":{},"body":{"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["peer",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["peopl",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["perf",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["perform",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["pick",{"_index":385,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["ping",{"_index":55,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"coverage.html":{}}}],["pingcheck",{"_index":17,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["pingcheck(key",{"_index":36,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["pingdb",{"_index":19,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["pingdb(connect",{"_index":51,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["pingdn",{"_index":135,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["pingdns(url",{"_index":155,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["place",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["pleas",{"_index":447,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["possibl",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["pr",{"_index":548,"title":{},"body":{"contributing.html":{}}}],["precis",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["prepar",{"_index":143,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["present",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["prevent",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["previou",{"_index":298,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["print",{"_index":716,"title":{},"body":{"contributing.html":{}}}],["privat",{"_index":133,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["problem",{"_index":437,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":709,"title":{},"body":{"contributing.html":{}}}],["progress",{"_index":750,"title":{},"body":{"index.html":{}}}],["project",{"_index":508,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promin",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["promis",{"_index":50,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["promise((_",{"_index":412,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["promise.al",{"_index":277,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["promise.race([promis",{"_index":421,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["promisetimeout",{"_index":188,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["promisetimeout(timeout",{"_index":192,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["promisetimeouterror",{"_index":82,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["properti",{"_index":197,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{}}}],["propos",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":18,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["provid",{"_index":100,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":232,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["publish",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["push",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":436,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":708,"title":{},"body":{"contributing.html":{}}}],["race",{"_index":418,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["rais",{"_index":407,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["re",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["reach",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":448,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["readabl",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["readili",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["readonli",{"_index":161,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["real",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["rebas",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["redirect",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["reduc",{"_index":297,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["refactor",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["refer",{"_index":243,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["refhost",{"_index":239,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["reflect",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["regist",{"_index":278,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["registr",{"_index":264,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["reject",{"_index":411,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":416,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["relat",{"_index":129,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"contributing.html":{}}}],["releas",{"_index":169,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["remot",{"_index":596,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["report",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["repositori",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["repres",{"_index":203,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["reproduc",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":131,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{},"index.html":{}}}],["requir",{"_index":200,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["reset",{"_index":325,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["respon",{"_index":149,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["respond",{"_index":41,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["respons",{"_index":764,"title":{},"body":{"index.html":{}}}],["rest",{"_index":701,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push(result",{"_index":284,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["return",{"_index":44,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["revert",{"_index":656,"title":{},"body":{"contributing.html":{}}}],["rm",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["rout",{"_index":292,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["rule",{"_index":442,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["rxj",{"_index":650,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["safe",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["sampl",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["saucelab",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":473,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["scalabl",{"_index":754,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":717,"title":{},"body":{"contributing.html":{}}}],["scenario",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["script",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":623,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["semi",{"_index":682,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":246,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["servic",{"_index":242,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["set",{"_index":344,"title":{},"body":{"modules/TerminusCoreModule.html":{},"index.html":{}}}],["settimeout",{"_index":414,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["settings.interfac",{"_index":85,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["settings.interface.t",{"_index":196,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["sha",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["shell",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":755,"title":{},"body":{"index.html":{}}}],["sign",{"_index":703,"title":{},"body":{"contributing.html":{}}}],["simpl",{"_index":711,"title":{},"body":{"contributing.html":{}}}],["small",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["someon",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["soon",{"_index":167,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["space",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["spec",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["special",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["sponsor",{"_index":780,"title":{},"body":{"index.html":{}}}],["stack",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":422,"title":{"contributing.html":{},"index.html":{}},"body":{"contributing.html":{}}}],["statement",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":331,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["statu",{"_index":207,"title":{},"body":{"classes/HealthIndicator.html":{},"index.html":{}}}],["statuscod",{"_index":170,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["statustext",{"_index":171,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["stay",{"_index":463,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["store",{"_index":251,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["string",{"_index":37,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["submiss",{"_index":441,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["successfulli",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":686,"title":{},"body":{"contributing.html":{}}}],["suggest",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["super",{"_index":89,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["super('connect",{"_index":124,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["super(`timeout",{"_index":404,"title":{},"body":{"classes/TimeoutError.html":{}}}],["super(connect",{"_index":191,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["support",{"_index":450,"title":{},"body":{"contributing.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":493,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["svg",{"_index":796,"title":{},"body":{"modules.html":{}}}],["synchron",{"_index":343,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["system",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["systemat",{"_index":474,"title":{},"body":{"contributing.html":{}}}],["tabl",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["take",{"_index":59,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["tbc",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["tens",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["terminu",{"_index":223,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["terminus.const",{"_index":272,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["terminus.modul",{"_index":358,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["terminus_lib",{"_index":271,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminus_module_opt",{"_index":270,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminusbootstrapservic",{"_index":217,"title":{"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["terminuscoremodul",{"_index":318,"title":{"modules/TerminusCoreModule.html":{}},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{},"overview.html":{}}}],["terminuscoremodule.forroot(opt",{"_index":396,"title":{},"body":{"modules/TerminusModule.html":{}}}],["terminuscoremodule.forrootasync(opt",{"_index":397,"title":{},"body":{"modules/TerminusModule.html":{}}}],["terminusendpoint",{"_index":253,"title":{"interfaces/TerminusEndpoint.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminusexplor",{"_index":293,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["terminuslib",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminuslibprovid",{"_index":355,"title":{},"body":{"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminuslogg",{"_index":379,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["terminusmodul",{"_index":357,"title":{"modules/TerminusModule.html":{}},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{}}}],["terminusmodule.forrootasync",{"_index":770,"title":{},"body":{"index.html":{}}}],["terminusmoduleasyncopt",{"_index":334,"title":{"interfaces/TerminusModuleAsyncOptions.html":{}},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminusmoduleopt",{"_index":238,"title":{"interfaces/TerminusModuleOptions.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["terminusoptionsfactori",{"_index":353,"title":{"interfaces/TerminusOptionsFactory.html":{}},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["test",{"_index":560,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["thank",{"_index":590,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["these.revert",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["third",{"_index":221,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"miscellaneous/variables.html":{}}}],["this.bootstrapterminu",{"_index":317,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.connect",{"_index":93,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["this.createasyncoptionsprovider(opt",{"_index":365,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["this.createasyncproviders(opt",{"_index":361,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["this.executehealthind",{"_index":294,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.generatehttperror(key",{"_index":182,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.gethealthcheckexecutor(endpoint",{"_index":305,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.gethealthchecksmap",{"_index":306,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.getstatus(key",{"_index":98,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["this.httpserv",{"_index":315,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.httpservice.request",{"_index":162,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.logerror.bind(thi",{"_index":310,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.logger.error(messag",{"_index":288,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.logger.log",{"_index":291,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.loghealthcheckregister(healthcheck",{"_index":311,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.options.endpoints.reduc",{"_index":303,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.options.logg",{"_index":309,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.pingdb(connect",{"_index":106,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["this.pingdns(url",{"_index":181,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.refhost.applicationref.gethttpserv",{"_index":316,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.terminus(this.httpserv",{"_index":307,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["through",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":96,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["thrown",{"_index":118,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["time",{"_index":199,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["timeout",{"_index":52,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeout.t",{"_index":406,"title":{},"body":{"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeouterror",{"_index":79,"title":{"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeouterror('tim",{"_index":417,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["timeout}m",{"_index":111,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/TimeoutError.html":{}}}],["today",{"_index":429,"title":{},"body":{"contributing.html":{}}}],["todo",{"_index":164,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["token",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["topromis",{"_index":163,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["touch",{"_index":785,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["travi",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["tri",{"_index":104,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{}}}],["true",{"_index":107,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["twitter",{"_index":793,"title":{},"body":{"index.html":{}}}],["two",{"_index":699,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":30,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":804,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":34,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/MongooseHealthIndicator.html":{},"classes/TimeoutError.html":{},"dependencies.html":{}}}],["typeormehealthind",{"_index":185,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["typeormmodul",{"_index":768,"title":{},"body":{"index.html":{}}}],["typeormmodule.forroot",{"_index":769,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":178,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["ui",{"_index":599,"title":{},"body":{"contributing.html":{}}}],["underli",{"_index":32,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{}}}],["unfortun",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["unit",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["unknown",{"_index":120,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["up",{"_index":208,"title":{},"body":{"classes/HealthIndicator.html":{},"index.html":{}}}],["updat",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["upgrad",{"_index":166,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["upstream",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":145,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{}}}],["us",{"_index":68,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["usag",{"_index":761,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":367,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["useexist",{"_index":387,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["usefactori",{"_index":368,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{}}}],["user",{"_index":308,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["usevalu",{"_index":359,"title":{},"body":{"modules/TerminusCoreModule.html":{},"miscellaneous/variables.html":{}}}],["util",{"_index":83,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/MongooseHealthIndicator.html":{}}}],["valu",{"_index":48,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":733,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["veri",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["version",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["visibl",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["void",{"_index":144,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["vote",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":451,"title":{},"body":{"contributing.html":{}}}],["we'll",{"_index":715,"title":{},"body":{"contributing.html":{}}}],["wealth",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["web",{"_index":598,"title":{},"body":{"contributing.html":{}}}],["websit",{"_index":791,"title":{},"body":{"index.html":{}}}],["well",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":69,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["white",{"_index":680,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["word",{"_index":698,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["workaround",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["wrap",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["wrapper",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":71,"title":{},"body":{"classes/AbstractDatabaseHealthIndicator.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"modules/TerminusModule.html":{}}}],["you'd",{"_index":783,"title":{},"body":{"index.html":{}}}],["you'v",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["zone.j",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["zoom",{"_index":324,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDatabaseHealthIndicator.html":{"url":"classes/AbstractDatabaseHealthIndicator.html","title":"class - AbstractDatabaseHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDatabaseHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/abstract/abstract-database-health-indicator.ts\n        \n\n            \n                Description\n            \n            \n                Abstract AbstractDatabaseHealthIndicator\n\n            \n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                pingDb\n                            \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(connection: Connection | MongooseConnection)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/abstract/abstract-database-health-indicator.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor with the connection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection | MongooseConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The underlying Connection instance from TypeOrm or Mongoose connection\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingCheck(key: string, options: DatabasePingCheckSettings)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/abstract/abstract-database-health-indicator.ts:38\n                            \n                        \n\n\n                \n                    \n                            Checks if the typeorm responds in (default) 1000ms and\nreturns a result object corresponding to the result\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DatabasePingCheckSettings\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                                Async\n                            pingDb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDb(connection: Connection | MongooseConnection, timeout: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/abstract/abstract-database-health-indicator.ts:27\n                            \n                        \n\n\n                \n                    \n                            Pings a typeorm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                        \n                                                                    Connection | MongooseConnection\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The connection which the ping should get executed\n\n                                                        \n                                                \n                                                \n                                                        timeout\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The timeout how long the ping should maximum take\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatus(key: string, isHealthy: boolean, options?: literal type)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     HealthIndicator\n\n                                \n                            \n                        \n                            \n                                    Defined in HealthIndicator:14\n                            \n                        \n\n\n                \n                    \n                            Generates the health indicator result object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used as key for the result object\n\n                                                        \n                                                \n                                                \n                                                        isHealthy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Whether the health indicator is healthy\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Additional options which will get appended to the result object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HealthIndicatorResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\nimport { Connection as MongooseConnection } from 'mongoose';\nimport { Connection } from 'typeorm';\nimport { ConnectionNotFoundError, TimeoutError } from '../../errors';\nimport { HealthIndicatorResult } from '../../interfaces';\nimport { TimeoutError as PromiseTimeoutError } from '../../utils';\nimport { DatabasePingCheckSettings } from '../databse-ping-check-settings.interface';\nimport { HealthIndicator } from './health-indicator';\n\n/**\n * Abstract AbstractDatabaseHealthIndicator\n */\nexport abstract class AbstractDatabaseHealthIndicator extends HealthIndicator {\n  /**\n   * Constructor with the connection\n   * @param connection The underlying Connection instance from TypeOrm or Mongoose connection\n   */\n  protected constructor(protected connection: Connection | MongooseConnection) {\n    super();\n  }\n\n  /**\n   * Pings a typeorm\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   */\n  protected abstract async pingDb(\n    connection: Connection | MongooseConnection,\n    timeout: number,\n  ): Promise;\n\n  /**\n   * Checks if the typeorm responds in (default) 1000ms and\n   * returns a result object corresponding to the result\n   * @param key\n   * @param options\n   */\n  async pingCheck(\n    key: string,\n    options: DatabasePingCheckSettings = {},\n  ): Promise {\n    let isHealthy = false;\n    const connection = options.connection || this.connection;\n    const timeout = options.timeout || 1000;\n\n    if (!connection) {\n      throw new ConnectionNotFoundError(\n        this.getStatus(key, isHealthy, {\n          message: 'Connection provider not found in application context',\n        }),\n      );\n    }\n\n    try {\n      await this.pingDb(connection, timeout);\n      isHealthy = true;\n    } catch (err) {\n      if (err instanceof PromiseTimeoutError) {\n        throw new TimeoutError(\n          timeout,\n          this.getStatus(key, isHealthy, {\n            message: `timeout of ${timeout}ms exceeded`,\n          }),\n        );\n      }\n    }\n\n    if (isHealthy) {\n      return this.getStatus(key, isHealthy);\n    } else {\n      throw new HealthCheckError(\n        `${key} is not available`,\n        this.getStatus(key, isHealthy),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectionNotFoundError.html":{"url":"classes/ConnectionNotFoundError.html","title":"class - ConnectionNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectionNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/connection-not-found.error.ts\n        \n\n            \n                Description\n            \n            \n                Error which gets thrown when the connection\ninstance was not found in the application context\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: unknown)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/connection-not-found.error.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes the error\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The cause of the health check error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * Error which gets thrown when the connection\n * instance was not found in the application context\n */\nexport class ConnectionNotFoundError extends HealthCheckError {\n  /**\n   * Initializes the error\n   * @param {unknown} cause The cause of the health check error\n   */\n  constructor(cause: unknown) {\n    super('Connection provider not found in application context', cause);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DNSHealthIndicator.html":{"url":"injectables/DNSHealthIndicator.html","title":"injectable - DNSHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DNSHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/dns/dns.health.ts\n        \n\n            \n                Description\n            \n            \n                The DNSHealthIndicator contains health indicators\nwhich are used for health checks related to HTTP requests\nand DNS\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateHttpError\n                            \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Private\n                                    Async\n                                pingDNS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/dns/dns.health.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the health indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpService provided by Nest\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateHttpError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateHttpError(key: string, error: AxiosError)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:41\n                            \n                        \n\n\n                \n                    \n                            Prepares and throw a HealthCheckError\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        error\n                                                        \n                                                                    AxiosError\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The thrown error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingCheck(key: string, url: string, options?: AxiosRequestConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the given url respons in the given timeout\nand returns a result object corresponding to the result\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The url which should be request\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    AxiosRequestConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional axios options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * dnsHealthIndicator.pingCheck(&#39;google&#39;, &#39;https://google.com&#39;, { timeout: 800 })\n   *\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            pingDNS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDNS(url: string, options: AxiosRequestConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executes a request with the given parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The url of the health check\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    AxiosRequestConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The optional axios options of the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, HttpService } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../../interfaces';\nimport { AxiosResponse, AxiosRequestConfig, AxiosError } from 'axios';\nimport { HealthIndicator } from '../abstract/health-indicator';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The DNSHealthIndicator contains health indicators\n * which are used for health checks related to HTTP requests\n * and DNS\n */\n@Injectable()\nexport class DNSHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the health indicator\n   * @param httpService The HttpService provided by Nest\n   */\n  constructor(private readonly httpService: HttpService) {\n    super();\n  }\n\n  /**\n   * Executes a request with the given parameters\n   * @param url The url of the health check\n   * @param options The optional axios options of the request\n   */\n  private async pingDNS(\n    url: string,\n    options: AxiosRequestConfig,\n  ): Promise | unknown> {\n    return await this.httpService.request({ url, ...options }).toPromise();\n  }\n\n  /**\n   * Prepares and throw a HealthCheckError\n   * @param key The key which will be used for the result object\n   * @param error The thrown error\n   *\n   * @throws {HealthCheckError}\n   */\n  private generateHttpError(key: string, error: AxiosError) {\n    // TODO: Check for `error.isAxiosError`\n    // Upgrade axios for that as soon ^0.19.0 is released\n    if (error) {\n      let statusCode: number;\n      let statusText: string;\n      if (error.response) {\n        statusCode = error.response.status;\n        statusText = error.response.statusText;\n      }\n      throw new HealthCheckError(\n        error.message,\n        this.getStatus(key, false, {\n          message: error.message,\n          statusCode,\n          statusText,\n        }),\n      );\n    }\n  }\n\n  /**\n   * Checks if the given url respons in the given timeout\n   * and returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param url The url which should be request\n   * @param options Optional axios options\n   *\n   * @throws {HealthCheckError} In case the health indicator failed\n   *\n   * @example\n   * ```TypeScript\n   * dnsHealthIndicator.pingCheck('google', 'https://google.com', { timeout: 800 })\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    url: string,\n    options?: AxiosRequestConfig,\n  ): Promise {\n    let isHealthy = false;\n\n    try {\n      await this.pingDNS(url, options);\n      isHealthy = true;\n    } catch (err) {\n      this.generateHttpError(key, err);\n    }\n\n    return this.getStatus(key, isHealthy);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseHealthIndicator.html":{"url":"injectables/DatabaseHealthIndicator.html","title":"injectable - DatabaseHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/typeorm/typeorm.health.ts\n        \n\n            \n                Description\n            \n            \n                The TypeOrmeHealthIndicator contains health indicators\nwhich are used for health checks related to typeorm\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/typeorm/typeorm.health.ts:11\n                            \n                        \n\n                \n                    \n                            Initializes the typeorm indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The typeorm connection of the application context\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingDb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDb(connection: Connection, timeout: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/typeorm/typeorm.health.ts:26\n                            \n                        \n\n\n                \n                    \n                            Pings a typeorm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                        \n                                                                    Connection\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The connection which the ping should get executed\n\n                                                        \n                                                \n                                                \n                                                        timeout\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The timeout how long the ping should maximum take\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@nestjs/common';\nimport { Connection } from 'typeorm';\nimport { promiseTimeout } from '../../utils';\nimport { AbstractDatabaseHealthIndicator } from '../abstract/abstract-database-health-indicator';\n\n/**\n * The TypeOrmeHealthIndicator contains health indicators\n * which are used for health checks related to typeorm\n */\n@Injectable()\nexport class DatabaseHealthIndicator extends AbstractDatabaseHealthIndicator {\n  /**\n   * Initializes the typeorm indicator\n   * @param connection The typeorm connection of the application context\n   */\n  constructor(@Optional() readonly connection: Connection) {\n    super(connection);\n  }\n\n  /**\n   * Pings a typeorm\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   *\n   */\n  async pingDb(connection: Connection, timeout: number) {\n    return await promiseTimeout(timeout, connection.query('SELECT 1'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabasePingCheckSettings.html":{"url":"interfaces/DatabasePingCheckSettings.html","title":"interface - DatabasePingCheckSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatabasePingCheckSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/databse-ping-check-settings.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connection\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                    \n                                \n                                \n                                    \n                                        connection:     Connection | MongooseConnection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Connection | MongooseConnection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The connection which the ping check should get executed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1000\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The amount of time the check should require in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Connection as MongooseConnection } from 'mongoose';\nimport { Connection } from 'typeorm';\n\nexport interface DatabasePingCheckSettings {\n  /**\n   * The connection which the ping check should get executed\n   */\n  connection?: Connection | MongooseConnection;\n  /**\n   * The amount of time the check should require in ms\n   * @default 1000\n   */\n  timeout?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthIndicator.html":{"url":"classes/HealthIndicator.html","title":"class - HealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/abstract/health-indicator.ts\n        \n\n            \n                Description\n            \n            \n                Represents an abstract health indicator\nwith common functionalities\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatus(key: string, isHealthy: boolean, options?: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/abstract/health-indicator.ts:14\n                            \n                        \n\n\n                \n                    \n                            Generates the health indicator result object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used as key for the result object\n\n                                                        \n                                                \n                                                \n                                                        isHealthy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Whether the health indicator is healthy\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Additional options which will get appended to the result object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HealthIndicatorResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthIndicatorResult } from '../..';\n\n/**\n * Represents an abstract health indicator\n * with common functionalities\n */\nexport abstract class HealthIndicator {\n  /**\n   * Generates the health indicator result object\n   * @param key The key which will be used as key for the result object\n   * @param isHealthy Whether the health indicator is healthy\n   * @param options Additional options which will get appended to the result object\n   */\n  protected getStatus(\n    key: string,\n    isHealthy: boolean,\n    options?: { [key: string]: unknown },\n  ): HealthIndicatorResult {\n    return {\n      [key]: {\n        status: isHealthy ? 'up' : 'down',\n        ...options,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseHealthIndicator.html":{"url":"injectables/MongooseHealthIndicator.html","title":"injectable - MongooseHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/mongoose/mongoose.health.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/mongoose/mongoose.health.ts:8\n                            \n                        \n\n                \n                    \n                            Initializes the typeorm indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The typeorm connection of the application context\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingDb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDb(connection: Connection, timeout: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/mongoose/mongoose.health.ts:23\n                            \n                        \n\n\n                \n                    \n                            Pings a mongoose connection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                        \n                                                                    Connection\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The connection which the ping should get executed\n\n                                                        \n                                                \n                                                \n                                                        timeout\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The timeout how long the ping should maximum take\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/mongoose';\nimport { Connection } from 'mongoose';\nimport { promiseTimeout } from '../../utils';\nimport { AbstractDatabaseHealthIndicator } from '../abstract/abstract-database-health-indicator';\n\n@Injectable()\nexport class MongooseHealthIndicator extends AbstractDatabaseHealthIndicator {\n  /**\n   * Initializes the typeorm indicator\n   * @param connection The typeorm connection of the application context\n   */\n  constructor(@Optional() @InjectConnection() readonly connection: Connection) {\n    super(connection);\n  }\n\n  /**\n   * Pings a mongoose connection\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   *\n   */\n  async pingDb(connection: Connection, timeout: number) {\n    return await promiseTimeout(timeout, connection.startSession());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TerminusBootstrapService.html":{"url":"injectables/TerminusBootstrapService.html","title":"injectable - TerminusBootstrapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TerminusBootstrapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/terminus-bootstrap.service.ts\n        \n\n            \n                Description\n            \n            \n                Bootstraps the third party Terminus library with the\nconfigured Module options\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpServer\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bootstrapTerminus\n                            \n                            \n                                    Private\n                                    Async\n                                executeHealthIndicators\n                            \n                            \n                                    Private\n                                getHealthCheckExecutor\n                            \n                            \n                                    Public\n                                getHealthChecksMap\n                            \n                            \n                                    Private\n                                logError\n                            \n                            \n                                    Private\n                                logHealthCheckRegister\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: TerminusModuleOptions, terminus: Terminus, refHost: ApplicationReferenceHost)\n                    \n                \n                        \n                            \n                                Defined in lib/terminus-bootstrap.service.ts:30\n                            \n                        \n\n                \n                    \n                            Initializes the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The terminus module options\n\n                                                        \n                                                \n                                                \n                                                        terminus\n                                                  \n                                                        \n                                                                    Terminus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The terminus instance\n\n                                                        \n                                                \n                                                \n                                                        refHost\n                                                  \n                                                        \n                                                                    ApplicationReferenceHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application reference host of NestJS which contains the http server instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bootstrapTerminus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        bootstrapTerminus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:144\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the third party terminus library with\nthe given module options\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            executeHealthIndicators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        executeHealthIndicators(healthIndicators: HealthIndicatorFunction[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Executes the given health indicators and stores the caused\nerrors and results\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        healthIndicators\n                                                        \n                                                                    HealthIndicatorFunction[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The health indicators which should get executed\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getHealthCheckExecutor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHealthCheckExecutor(endpoint: TerminusEndpoint)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpoint\n                                                        \n                                                                    TerminusEndpoint\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHealthChecksMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHealthChecksMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Returns the health check map using the configured health\nindicators\n\n\n                            \n                                Returns :     HealthCheckMap\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logError(message: string, error: HealthCheckError | Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Logs an error message of terminus\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The log message\n\n                                                        \n                                                \n                                                \n                                                        error\n                                                        \n                                                                    HealthCheckError | Error\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The error which was thrown\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logHealthCheckRegister\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logHealthCheckRegister(healthChecks: HealthCheckMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Logs the health check registration to the logger\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        healthChecks\n                                                        \n                                                                    HealthCheckMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The health check map to log\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onApplicationBootstrap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onApplicationBootstrap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            Gets called when the application gets bootstrapped.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpServer:     Server\n\n                    \n                \n                    \n                        \n                            Type :     Server\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:26\n                            \n                        \n\n                \n                    \n                        The http server of NestJS\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logger:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger(TerminusBootstrapService.name, true)\n                        \n                    \n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:30\n                            \n                        \n\n                \n                    \n                        The NestJS logger\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Inject,\n  OnApplicationBootstrap,\n  Logger,\n} from '@nestjs/common';\nimport { TERMINUS_MODULE_OPTIONS, TERMINUS_LIB } from './terminus.constants';\nimport {\n  TerminusModuleOptions,\n  HealthIndicatorFunction,\n  TerminusEndpoint,\n} from './interfaces';\nimport { ApplicationReferenceHost } from '@nestjs/core';\nimport { Server } from 'http';\nimport { HealthCheckError, Terminus, HealthCheckMap } from '@godaddy/terminus';\n\n/**\n * Bootstraps the third party Terminus library with the\n * configured Module options\n */\n@Injectable()\nexport class TerminusBootstrapService implements OnApplicationBootstrap {\n  /**\n   * The http server of NestJS\n   */\n  private httpServer: Server;\n  /**\n   * The NestJS logger\n   */\n  private readonly logger = new Logger(TerminusBootstrapService.name, true);\n\n  /**\n   * Initializes the service\n   * @param options The terminus module options\n   * @param refHost The application reference host of NestJS which contains the http server instance\n   * @param terminus The terminus instance\n   */\n  constructor(\n    @Inject(TERMINUS_MODULE_OPTIONS)\n    private readonly options: TerminusModuleOptions,\n    @Inject(TERMINUS_LIB) private readonly terminus: Terminus,\n    private readonly refHost: ApplicationReferenceHost,\n  ) {}\n\n  /**\n   * Executes the given health indicators and stores the caused\n   * errors and results\n   * @param healthIndicators The health indicators which should get executed\n   */\n  private async executeHealthIndicators(\n    healthIndicators: HealthIndicatorFunction[],\n  ): Promise {\n    const results: unknown[] = [];\n    const errors: unknown[] = [];\n    await Promise.all(\n      healthIndicators\n        // Register all promises\n        .map(healthIndicator => healthIndicator())\n        .map((p: Promise) =>\n          p.catch((error: Error) => {\n            if (error instanceof HealthCheckError) {\n              errors.push(error.causes);\n            } else {\n              throw error;\n            }\n          }),\n        )\n        .map((p: Promise) =>\n          p.then((result: unknown) => result && results.push(result)),\n        ),\n    );\n\n    return { results, errors };\n  }\n\n  /**\n   * Logs an error message of terminus\n   * @param message The log message\n   * @param error The error which was thrown\n   */\n  private logError(message: string, error: HealthCheckError | Error) {\n    if ((error as HealthCheckError).causes) {\n      const healthError: HealthCheckError = error as HealthCheckError;\n      message = `${message} ${JSON.stringify(healthError.causes)}`;\n    }\n    this.logger.error(message, error.stack);\n  }\n\n  /**\n   * Logs the health check registration to the logger\n   * @param healthChecks The health check map to log\n   */\n  private logHealthCheckRegister(healthChecks: HealthCheckMap) {\n    Object.keys(healthChecks).forEach(endpoint =>\n      this.logger.log(\n        `Mapped {${endpoint}, GET} healthcheck route`,\n        'TerminusExplorer',\n      ),\n    );\n  }\n\n  private getHealthCheckExecutor(\n    endpoint: TerminusEndpoint,\n  ): () => Promise {\n    return async () => {\n      const { results, errors } = await this.executeHealthIndicators(\n        endpoint.healthIndicators,\n      );\n\n      const info = (results || [])\n        .concat(errors || [])\n        .reduce(\n          (previous: Object, current: Object) =>\n            Object.assign(previous, current),\n          {},\n        );\n\n      if (errors.length) {\n        throw new HealthCheckError('Healthcheck failed', info);\n      } else {\n        return info;\n      }\n    };\n  }\n\n  /**\n   * Returns the health check map using the configured health\n   * indicators\n   */\n  public getHealthChecksMap(): HealthCheckMap {\n    return this.options.endpoints.reduce(\n      (healthChecks, endpoint) => {\n        healthChecks[endpoint.url] = this.getHealthCheckExecutor(endpoint);\n        return healthChecks;\n      },\n      {} as HealthCheckMap,\n    );\n  }\n\n  /**\n   * Bootstraps the third party terminus library with\n   * the given module options\n   */\n  private bootstrapTerminus() {\n    const healthChecks = this.getHealthChecksMap();\n    this.terminus(this.httpServer, {\n      healthChecks,\n      // Use the logger of the user\n      // or by the default logger if is not defined\n      logger: this.options.logger || this.logError.bind(this),\n    });\n    this.logHealthCheckRegister(healthChecks);\n  }\n\n  /**\n   * Gets called when the application gets bootstrapped.\n   */\n  public onApplicationBootstrap() {\n    // httpServer for express, instance.server for fastify\n    this.httpServer = this.refHost.applicationRef.getHttpServer();\n    this.bootstrapTerminus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusCoreModule.html":{"url":"modules/TerminusCoreModule.html","title":"module - TerminusCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TerminusCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusCoreModule\n\n\n\ncluster_TerminusCoreModule_providers\n\n\n\n\nTerminusBootstrapService\n\nTerminusBootstrapService\n\n\n\nTerminusCoreModule\n\nTerminusCoreModule\n\nTerminusCoreModule -->\n\nTerminusBootstrapService->TerminusCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The internal Terminus Module which handles the integration\nwith the third party Terminus library and Nest\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TerminusBootstrapService\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createAsyncOptionsProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAsyncOptionsProvider(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:106\n                            \n                        \n\n\n                \n                    \n                            Returns the asynchrnous Terminus options providers depending on the\ngiven module options\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options for the asynchrnous terminus module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Provider\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createAsyncProviders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAsyncProviders(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:86\n                            \n                        \n\n\n                \n                    \n                            Returns the asynchrnous providers depending on the given module\noptions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options for the asynchrnous terminus module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Provider[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(options: TerminusModuleOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:35\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the internal Terminus Module with the given options\nsynchronously and sets the correct providers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The options to bootstrap the module synchronously\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRootAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRootAsync(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:60\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the internal Terminus Module with the given\noptions asynchronously and sets the correct providers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The options to bootstrap the module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  DynamicModule,\n  Global,\n  Module,\n  Provider,\n  HttpModule,\n} from '@nestjs/common';\nimport {\n  TerminusModuleOptions,\n  TerminusModuleAsyncOptions,\n  TerminusOptionsFactory,\n} from './interfaces';\nimport { TERMINUS_MODULE_OPTIONS } from './terminus.constants';\nimport { TerminusBootstrapService } from './terminus-bootstrap.service';\nimport { TerminusLibProvider } from './terminus-lib.provider';\nimport { TerminusModule } from './terminus.module';\nimport { DatabaseHealthIndicator, MongooseHealthIndicator } from '.';\nimport { DNSHealthIndicator } from './health-indicators';\n\n/**\n * The internal Terminus Module which handles the integration\n * with the third party Terminus library and Nest\n */\n@Global()\n@Module({\n  providers: [TerminusLibProvider, TerminusBootstrapService],\n  exports: [],\n})\nexport class TerminusCoreModule {\n  /**\n   * Bootstraps the internal Terminus Module with the given options\n   * synchronously and sets the correct providers\n   * @param options The options to bootstrap the module synchronously\n   */\n  static forRoot(options: TerminusModuleOptions): DynamicModule {\n    const terminusModuleOptions = {\n      provide: TERMINUS_MODULE_OPTIONS,\n      useValue: options,\n    };\n\n    return {\n      module: TerminusCoreModule,\n      imports: [HttpModule],\n      providers: [\n        terminusModuleOptions,\n        TerminusLibProvider,\n        TerminusBootstrapService,\n        DatabaseHealthIndicator,\n        MongooseHealthIndicator,\n      ],\n      exports: [DatabaseHealthIndicator, MongooseHealthIndicator],\n    };\n  }\n\n  /**\n   * Bootstraps the internal Terminus Module with the given\n   * options asynchronously and sets the correct providers\n   * @param options The options to bootstrap the module\n   */\n  static forRootAsync(options: TerminusModuleAsyncOptions): DynamicModule {\n    const asyncProviders = this.createAsyncProviders(options);\n    return {\n      module: TerminusModule,\n      imports: [...(options.imports || []), HttpModule],\n      providers: [\n        ...asyncProviders,\n        TerminusBootstrapService,\n        TerminusLibProvider,\n        DatabaseHealthIndicator,\n        DNSHealthIndicator,\n        MongooseHealthIndicator,\n      ],\n      exports: [\n        DatabaseHealthIndicator,\n        DNSHealthIndicator,\n        MongooseHealthIndicator,\n      ],\n    };\n  }\n\n  /**\n   * Returns the asynchrnous providers depending on the given module\n   * options\n   * @param options Options for the asynchrnous terminus module\n   */\n  private static createAsyncProviders(\n    options: TerminusModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useFactory || options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  /**\n   * Returns the asynchrnous Terminus options providers depending on the\n   * given module options\n   * @param options Options for the asynchrnous terminus module\n   */\n  private static createAsyncOptionsProvider(\n    options: TerminusModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: TERMINUS_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n    return {\n      provide: TERMINUS_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: TerminusOptionsFactory) =>\n        await optionsFactory.createTerminusOptions(),\n      inject: [options.useClass || options.useExisting],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusEndpoint.html":{"url":"interfaces/TerminusEndpoint.html","title":"interface - TerminusEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusEndpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Represents one endpoint / health check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        healthIndicators\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        healthIndicators\n                                    \n                                \n                                \n                                    \n                                        healthIndicators:     HealthIndicatorFunction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HealthIndicatorFunction[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The health checks which should get executed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url of the endpoint / health check\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusModule.html":{"url":"modules/TerminusModule.html","title":"module - TerminusModule","body":"\n                   \n\n\n\n\n    Modules\n    TerminusModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Terminus Module which represents the integration of the\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(options?: TerminusModuleOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus.module.ts:18\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the Terminus Module synchronously\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options for the Terminus Module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRootAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRootAsync(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus.module.ts:29\n                            \n                        \n\n\n                \n                    \n                            Bootstrap the Terminus Module asynchronously\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The options for the Terminus module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport {\n  TerminusModuleOptions,\n  TerminusModuleAsyncOptions,\n} from './interfaces/terminus-module-options.interface';\nimport { TerminusCoreModule } from './terminus-core.module';\n\n/**\n * Terminus Module which represents the integration of the\n * @godaddy/terminus module with the Nest ecosystem.\n */\n@Module({})\nexport class TerminusModule {\n  /**\n   * Bootstraps the Terminus Module synchronously\n   * @param options The options for the Terminus Module\n   */\n  static forRoot(options?: TerminusModuleOptions): DynamicModule {\n    return {\n      module: TerminusModule,\n      imports: [TerminusCoreModule.forRoot(options)],\n    };\n  }\n\n  /**\n   * Bootstrap the Terminus Module asynchronously\n   * @param options The options for the Terminus module\n   */\n  static forRootAsync(options: TerminusModuleAsyncOptions): DynamicModule {\n    return {\n      module: TerminusModule,\n      imports: [TerminusCoreModule.forRootAsync(options)],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleAsyncOptions.html":{"url":"interfaces/TerminusModuleAsyncOptions.html","title":"interface - TerminusModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options f$r the asynchronous Terminus module creation\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The providers which should get injected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Import existing providers from other module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The factory which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleOptions.html":{"url":"interfaces/TerminusModuleOptions.html","title":"interface - TerminusModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options of the terminus module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoints\n                                \n                                \n                                            Optional\n                                        logger\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                    \n                                \n                                \n                                    \n                                        endpoints:     TerminusEndpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TerminusEndpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of endpoints\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                    \n                                \n                                \n                                    \n                                        logger:     TerminusLogger\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TerminusLogger\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusOptionsFactory.html":{"url":"interfaces/TerminusOptionsFactory.html","title":"interface - TerminusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The interface for the factory which provides the Terminus options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createTerminusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTerminusOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTerminusOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/interfaces/terminus-module-options.interface.ts:48\n                            \n                        \n\n\n                \n                    \n                            The function which returns the Terminus Options\n\n\n                            \n                                Returns :     Promise | TerminusModuleOptions\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError.html":{"url":"classes/TimeoutError.html","title":"class - TimeoutError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/timeout-error.ts\n        \n\n            \n                Description\n            \n            \n                Gets thrown when the timeout of the\ntypeorm health check exceeds\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timeout: number, cause: unknown)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/timeout-error.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes the error\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeout\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The given timeout in ms\n\n                                                        \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The cause of the health check error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * Gets thrown when the timeout of the\n * typeorm health check exceeds\n */\nexport class TimeoutError extends HealthCheckError {\n  /**\n   * Initializes the error\n   * @param {number} timeout The given timeout in ms\n   * @param {unknown} cause The cause of the health check error\n   */\n  constructor(timeout: number, cause: unknown) {\n    super(`timeout of ${timeout}ms exceeded`, cause);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError-1.html":{"url":"classes/TimeoutError-1.html","title":"class - TimeoutError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/utils/promise-timeout.ts\n        \n\n            \n                Description\n            \n            \n                An errors which gets raised when the timeout\nexceeded\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TimeoutError extends Error {}\n\n/**\n * Executes a promise in the given timeout. If the promise\n * does not finish in the given timeout, it will\n * raise a TimeoutError\n *\n * @param {number} ms The timeout in milliseconds\n * @param {Promise} promise The promise which should get executed\n */\nexport const promiseTimeout = function(\n  ms: number,\n  promise: Promise,\n): Promise {\n  // Create a promise that rejects in  milliseconds\n  let timeout = new Promise((_, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new TimeoutError('Timed out in ' + ms + 'ms.'));\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeout]);\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to Nest\nWe would love for you to contribute to Nest and help make it even better than it is\ntoday! As a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\n\n\n\n Code of Conduct\nHelp us keep Nest open and inclusive. Please read and follow our [Code of Conduct][coc]. -->\n\n Got a Question or Problem?\nDo not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on Stack Overflow where the questions should be tagged with tag nestjs.\nStack Overflow is a much better place to ask questions since:\n\n\nquestions and answers stay available for public viewing so your question / answer might help someone else\nStack Overflow's voting system assures that the best answers are prominently visible.\n\nTo save your and our time, we will systematically close all issues that are requests for general support and redirect people to Stack Overflow.\nIf you would like to chat about the question in real-time, you can reach out via our gitter channel.\n Found a Bug?\nIf you find a bug in the source code, you can help us by\nsubmitting an issue to our GitHub Repository. Even better, you can\nsubmit a Pull Request with a fix.\n Missing a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project. For your issue name, please prefix your proposal with [discussion], for example \"[discussion]: your feature idea\".\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submission Guidelines\n Submitting an Issue\nBefore you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.\nWe want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using a repository or Gist. Having a live, reproducible scenario gives us wealth of important information without going back & forth to you with additional questions like:\n\nversion of NestJS used\n3rd-party libraries and their versions\nand most importantly - a use-case that fails\n\n\n\n\n\nUnfortunately, we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that don't have enough info to be reproduced.\nYou can file new issues by filling out our new issue form.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\nFork the nestjs/nest repo.\nMake your changes in a new git branch:\n  git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\nRun the full Nest test suite, as described in the developer documentation,\nand ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n  git commit -a Note: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n git push origin my-fix-branch\nIn GitHub, send a pull request to nestjs:master.\n\nIf we suggest changes then:\n\nMake the required updates.\nRe-run the Nest test suites to ensure tests are still passing.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n  git push origin --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\n\nAll public API methods must be documented. (Details TBC). -->\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters. An automated formatter is available, see\nDEVELOPER.md.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the Nest change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nFooter should contain a closing reference to an issue if any.\nSamples: (even more samples)\ndocs(changelog) update change log to beta.5bugfix(@nestjs/core) need to depend on latest rxjs and zone.js\n\nThe version in our package.json gets copied to the one we publish, and users need the latest of these.Revert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of the reverted commit. In the body it should say: This reverts commit ., where the hash is the SHA of the commit being reverted.\nType\nMust be one of the following:\n\nbuild: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\nci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\ndocs: Documentation only changes\nfeature: A new feature\nbugfix: A bug fix\nperf: A code change that improves performance\nrefactor: A code change that neither fixes a bug nor adds a feature\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\ntest: Adding missing tests or correcting existing tests\n\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla]. -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/errors/connection-not-found.error.ts\n            \n            \n                class\n            \n            \n                ConnectionNotFoundError\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/errors/timeout-error.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/health-indicators/abstract/abstract-database-health-indicator.ts\n            \n            \n                class\n            \n            \n                AbstractDatabaseHealthIndicator\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/health-indicators/abstract/health-indicator.ts\n            \n            \n                class\n            \n            \n                HealthIndicator\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/health-indicators/databse-ping-check-settings.interface.ts\n            \n            \n                interface\n            \n            \n                DatabasePingCheckSettings\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/dns/dns.health.ts\n            \n            \n                injectable\n            \n            \n                DNSHealthIndicator\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/health-indicators/mongoose/mongoose.health.ts\n            \n            \n                injectable\n            \n            \n                MongooseHealthIndicator\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/typeorm/typeorm.health.ts\n            \n            \n                injectable\n            \n            \n                DatabaseHealthIndicator\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusEndpoint\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusModuleAsyncOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusModuleOptions\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusOptionsFactory\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/terminus-bootstrap.service.ts\n            \n            \n                injectable\n            \n            \n                TerminusBootstrapService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                lib/terminus-lib.provider.ts\n            \n            \n                variable\n            \n            \n                TerminusLibProvider\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/terminus.constants.ts\n            \n            \n                variable\n            \n            \n                TERMINUS_LIB\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/terminus.constants.ts\n            \n            \n                variable\n            \n            \n                TERMINUS_MODULE_OPTIONS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/utils/promise-timeout.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/utils/promise-timeout.ts\n            \n            \n                variable\n            \n            \n                promiseTimeout\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^5.5.0\n        \n            @nestjs/core : ^5.5.0\n        \n            @nestjs/typeorm : ^5.2.2\n        \n            @nestjs/mongoose : ^5.2.2\n        \n            typeorm : ^0.2.9\n        \n            mongoose : ^5.4.2\n        \n            @godaddy/terminus : ^4.1.0\n        \n            reflect-metadata : 0.1.12\n        \n            rxjs : ^6.3.3\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nThe Terminus module for Nest.\nInstallation\n\nnpm install --save @nestjs/terminus @godaddy/terminus\nUsage\nImport the Terminus module with the following options for a database health check\n\nconst getTerminusOptions = (\n  db: DatabaseHealthIndicator,\n): TerminusModuleOptions => ({\n  endpoints: [\n    {\n      // The health check will be available with /health\n      url: '/health',\n      // All the indicator which will be checked when requesting /health\n      healthIndicators: [\n        // Set the timeout for a response to 300ms\n        async () => db.pingCheck('database', { timeout: 300 })\n      ],\n    },\n  ],\n});\n\n@Module({\n  imports:[\n    // Make sure TypeOrmModule is available in the module context\n    TypeOrmModule.forRoot({ ... }),\n    TerminusModule.forRootAsync({\n      // Inject the DatabaseHealthIndicator provided by nestjs/terminus\n      inject: [DatabaseHealthIndicator],\n      useFactory: db => getTerminusOptions(db),\n    }),\n  ],\n})\nexport class HealthModule { }\nIf everything is set up correctly, you can access the healthcheck on http://localhost:3000/health.\n\n{\n  \"status\": \"ok\",\n  \"info\": {\n    \"database\": {\n      \"status\": \"up\"\n    }\n  }\n}\nFor more information, see docs or for the internal documentation\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec & Livio Brunner\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TerminusModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusCoreModule\n\n\n\ncluster_TerminusCoreModule_providers\n\n\n\n\nTerminusBootstrapService\n\nTerminusBootstrapService\n\n\n\nTerminusCoreModule\n\nTerminusCoreModule\n\nTerminusCoreModule -->\n\nTerminusBootstrapService->TerminusCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HealthIndicatorFunction   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            HealthIndicatorResult   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            TerminusLogger   (lib/.../terminus-module-options.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/interfaces/health-indicator.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        HealthIndicatorFunction\n                    \n                \n                    \n                        \n                            A health indicator function for a health check\n\n                        \n                    \n                \n                    \n                        HealthIndicatorFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HealthIndicatorResult\n                    \n                \n                    \n                        \n                            The result object of a health indicator\n\n                        \n                    \n                \n                    \n                        HealthIndicatorResult:     literal type\n\n                    \n                \n            \n        \n\n    lib/interfaces/terminus-module-options.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        TerminusLogger\n                    \n                \n                    \n                        \n                            The logger which will be used inside the terminus application\nto log errors or messages\n\n                        \n                    \n                \n                    \n                        TerminusLogger:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            promiseTimeout   (lib/.../promise-timeout.ts)\n                        \n                        \n                            TERMINUS_LIB   (lib/.../terminus.constants.ts)\n                        \n                        \n                            TERMINUS_MODULE_OPTIONS   (lib/.../terminus.constants.ts)\n                        \n                        \n                            TerminusLibProvider   (lib/.../terminus-lib.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/utils/promise-timeout.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            promiseTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promiseTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : function(\n  ms: number,\n  promise: Promise,\n): Promise {\n  // Create a promise that rejects in  milliseconds\n  let timeout = new Promise((_, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new TimeoutError('Timed out in ' + ms + 'ms.'));\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeout]);\n}\n                        \n                    \n\n                \n                    \n                        Executes a promise in the given timeout. If the promise\ndoes not finish in the given timeout, it will\nraise a TimeoutError\n\n                    \n                \n\n            \n        \n\n    lib/terminus.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TERMINUS_LIB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TERMINUS_LIB:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TerminusLib'\n                        \n                    \n\n                \n                    \n                        The inject token for the third party Terminus library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TERMINUS_MODULE_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TERMINUS_MODULE_OPTIONS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TerminusModuleOptions'\n                        \n                    \n\n                \n                    \n                        The inject token for the Terminus module options\n\n                    \n                \n\n            \n        \n\n    lib/terminus-lib.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TerminusLibProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TerminusLibProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: TERMINUS_LIB,\n  useValue: createTerminus,\n}\n                        \n                    \n\n                \n                    \n                        Create a wrapper so it is injectable & easier to test\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
